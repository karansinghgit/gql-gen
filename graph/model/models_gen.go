// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Message interface {
	IsMessage()
}

type Chat struct {
	ID       string    `json:"id"`
	Sender   *User     `json:"sender"`
	Receiver *User     `json:"receiver"`
	Messages []Message `json:"messages"`
}

type Feelr struct {
	ID        string    `json:"id"`
	Question  string    `json:"question"`
	Timestamp time.Time `json:"timestamp"`
	Topic     *Topic    `json:"topic"`
}

type FeelrMessage struct {
	Feelr         *Feelr    `json:"feelr"`
	User1         *User     `json:"user1"`
	User2         *User     `json:"user2"`
	User1Response string    `json:"user1Response"`
	User2Response string    `json:"user2Response"`
	Timestamp     time.Time `json:"timestamp"`
}

func (FeelrMessage) IsMessage() {}

type TextMessage struct {
	ID        string    `json:"id"`
	Message   string    `json:"message"`
	Timestamp time.Time `json:"timestamp"`
}

func (TextMessage) IsMessage() {}

type Topic struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type User struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}
